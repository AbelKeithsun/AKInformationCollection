<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.ak.work.mapper.MeasurementDataMapper" >
  <resultMap id="BaseResultMap" type="club.ak.work.bean.MeasurementData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="online_date" property="onlineDate" jdbcType="TIMESTAMP" />
    <result column="test_create_sql" property="testCreateSql" jdbcType="VARCHAR" />
    <result column="test_create_rollback_sql" property="testCreateRollbackSql" jdbcType="VARCHAR" />
    <result column="test_alter_sql" property="testAlterSql" jdbcType="VARCHAR" />
    <result column="test_alter_rollback_sql" property="testAlterRollbackSql" jdbcType="VARCHAR" />
    <result column="test_update_sql" property="testUpdateSql" jdbcType="VARCHAR" />
    <result column="test_update_rollback_sql" property="testUpdateRollbackSql" jdbcType="VARCHAR" />
    <result column="test_insert_sql" property="testInsertSql" jdbcType="VARCHAR" />
    <result column="test_insert_rollback_sql" property="testInsertRollbackSql" jdbcType="VARCHAR" />
    <result column="test_delete_sql" property="testDeleteSql" jdbcType="VARCHAR" />
    <result column="test_delete_rollback_sql" property="testDeleteRollbackSql" jdbcType="VARCHAR" />
    <result column="pd_create_sql" property="pdCreateSql" jdbcType="VARCHAR" />
    <result column="pd_create_rollback_sql" property="pdCreateRollbackSql" jdbcType="VARCHAR" />
    <result column="pd_alter_sql" property="pdAlterSql" jdbcType="VARCHAR" />
    <result column="pd_alter_rollback_sql" property="pdAlterRollbackSql" jdbcType="VARCHAR" />
    <result column="pd_update_sql" property="pdUpdateSql" jdbcType="VARCHAR" />
    <result column="pd_update_rollback_sql" property="pdUpdateRollbackSql" jdbcType="VARCHAR" />
    <result column="pd_insert_sql" property="pdInsertSql" jdbcType="VARCHAR" />
    <result column="pd_insert_rollback_sql" property="pdInsertRollbackSql" jdbcType="VARCHAR" />
    <result column="pd_delete_sql" property="pdDeleteSql" jdbcType="VARCHAR" />
    <result column="pd_delete_rollback_sql" property="pdDeleteRollbackSql" jdbcType="VARCHAR" />
    <result column="created_user" property="createdUser" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_user" property="modifiedUser" jdbcType="VARCHAR" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="ext1" property="ext1" jdbcType="VARCHAR" />
    <result column="ext2" property="ext2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    id, user_id, online_date, test_create_sql, test_create_rollback_sql, test_alter_sql, 
    test_alter_rollback_sql, test_update_sql, test_update_rollback_sql, test_insert_sql, 
    test_insert_rollback_sql, test_delete_sql, test_delete_rollback_sql, pd_create_sql, 
    pd_create_rollback_sql, pd_alter_sql, pd_alter_rollback_sql, pd_update_sql, pd_update_rollback_sql, 
    pd_insert_sql, pd_insert_rollback_sql, pd_delete_sql, pd_delete_rollback_sql, created_user, 
    created_time, modified_user, modified_time, ext1, ext2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="club.ak.work.bean.MeasurementDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from measurement_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from measurement_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    delete from measurement_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="club.ak.work.bean.MeasurementDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    delete from measurement_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertData" parameterType="club.ak.work.bean.MeasurementData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    insert into measurement_data (id, user_id, online_date, 
      test_create_sql, test_create_rollback_sql, test_alter_sql, 
      test_alter_rollback_sql, test_update_sql, test_update_rollback_sql, 
      test_insert_sql, test_insert_rollback_sql, test_delete_sql, 
      test_delete_rollback_sql, pd_create_sql, pd_create_rollback_sql, 
      pd_alter_sql, pd_alter_rollback_sql, pd_update_sql, 
      pd_update_rollback_sql, pd_insert_sql, pd_insert_rollback_sql, 
      pd_delete_sql, pd_delete_rollback_sql, created_user, 
      created_time, modified_user, modified_time, 
      ext1, ext2)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{onlineDate,jdbcType=TIMESTAMP}, 
      #{testCreateSql,jdbcType=VARCHAR}, #{testCreateRollbackSql,jdbcType=VARCHAR}, #{testAlterSql,jdbcType=VARCHAR}, 
      #{testAlterRollbackSql,jdbcType=VARCHAR}, #{testUpdateSql,jdbcType=VARCHAR}, #{testUpdateRollbackSql,jdbcType=VARCHAR}, 
      #{testInsertSql,jdbcType=VARCHAR}, #{testInsertRollbackSql,jdbcType=VARCHAR}, #{testDeleteSql,jdbcType=VARCHAR}, 
      #{testDeleteRollbackSql,jdbcType=VARCHAR}, #{pdCreateSql,jdbcType=VARCHAR}, #{pdCreateRollbackSql,jdbcType=VARCHAR}, 
      #{pdAlterSql,jdbcType=VARCHAR}, #{pdAlterRollbackSql,jdbcType=VARCHAR}, #{pdUpdateSql,jdbcType=VARCHAR}, 
      #{pdUpdateRollbackSql,jdbcType=VARCHAR}, #{pdInsertSql,jdbcType=VARCHAR}, #{pdInsertRollbackSql,jdbcType=VARCHAR}, 
      #{pdDeleteSql,jdbcType=VARCHAR}, #{pdDeleteRollbackSql,jdbcType=VARCHAR}, #{createdUser,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{modifiedUser,jdbcType=VARCHAR}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="club.ak.work.bean.MeasurementData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    insert into measurement_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="onlineDate != null" >
        online_date,
      </if>
      <if test="testCreateSql != null" >
        test_create_sql,
      </if>
      <if test="testCreateRollbackSql != null" >
        test_create_rollback_sql,
      </if>
      <if test="testAlterSql != null" >
        test_alter_sql,
      </if>
      <if test="testAlterRollbackSql != null" >
        test_alter_rollback_sql,
      </if>
      <if test="testUpdateSql != null" >
        test_update_sql,
      </if>
      <if test="testUpdateRollbackSql != null" >
        test_update_rollback_sql,
      </if>
      <if test="testInsertSql != null" >
        test_insert_sql,
      </if>
      <if test="testInsertRollbackSql != null" >
        test_insert_rollback_sql,
      </if>
      <if test="testDeleteSql != null" >
        test_delete_sql,
      </if>
      <if test="testDeleteRollbackSql != null" >
        test_delete_rollback_sql,
      </if>
      <if test="pdCreateSql != null" >
        pd_create_sql,
      </if>
      <if test="pdCreateRollbackSql != null" >
        pd_create_rollback_sql,
      </if>
      <if test="pdAlterSql != null" >
        pd_alter_sql,
      </if>
      <if test="pdAlterRollbackSql != null" >
        pd_alter_rollback_sql,
      </if>
      <if test="pdUpdateSql != null" >
        pd_update_sql,
      </if>
      <if test="pdUpdateRollbackSql != null" >
        pd_update_rollback_sql,
      </if>
      <if test="pdInsertSql != null" >
        pd_insert_sql,
      </if>
      <if test="pdInsertRollbackSql != null" >
        pd_insert_rollback_sql,
      </if>
      <if test="pdDeleteSql != null" >
        pd_delete_sql,
      </if>
      <if test="pdDeleteRollbackSql != null" >
        pd_delete_rollback_sql,
      </if>
      <if test="createdUser != null" >
        created_user,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedUser != null" >
        modified_user,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="ext1 != null" >
        ext1,
      </if>
      <if test="ext2 != null" >
        ext2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="onlineDate != null" >
        #{onlineDate,jdbcType=TIMESTAMP},
      </if>
      <if test="testCreateSql != null" >
        #{testCreateSql,jdbcType=VARCHAR},
      </if>
      <if test="testCreateRollbackSql != null" >
        #{testCreateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testAlterSql != null" >
        #{testAlterSql,jdbcType=VARCHAR},
      </if>
      <if test="testAlterRollbackSql != null" >
        #{testAlterRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testUpdateSql != null" >
        #{testUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="testUpdateRollbackSql != null" >
        #{testUpdateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testInsertSql != null" >
        #{testInsertSql,jdbcType=VARCHAR},
      </if>
      <if test="testInsertRollbackSql != null" >
        #{testInsertRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testDeleteSql != null" >
        #{testDeleteSql,jdbcType=VARCHAR},
      </if>
      <if test="testDeleteRollbackSql != null" >
        #{testDeleteRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdCreateSql != null" >
        #{pdCreateSql,jdbcType=VARCHAR},
      </if>
      <if test="pdCreateRollbackSql != null" >
        #{pdCreateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdAlterSql != null" >
        #{pdAlterSql,jdbcType=VARCHAR},
      </if>
      <if test="pdAlterRollbackSql != null" >
        #{pdAlterRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdUpdateSql != null" >
        #{pdUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="pdUpdateRollbackSql != null" >
        #{pdUpdateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdInsertSql != null" >
        #{pdInsertSql,jdbcType=VARCHAR},
      </if>
      <if test="pdInsertRollbackSql != null" >
        #{pdInsertRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdDeleteSql != null" >
        #{pdDeleteSql,jdbcType=VARCHAR},
      </if>
      <if test="pdDeleteRollbackSql != null" >
        #{pdDeleteRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null" >
        #{modifiedUser,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="club.ak.work.bean.MeasurementDataExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    select count(*) from measurement_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    update measurement_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.onlineDate != null" >
        online_date = #{record.onlineDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testCreateSql != null" >
        test_create_sql = #{record.testCreateSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testCreateRollbackSql != null" >
        test_create_rollback_sql = #{record.testCreateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testAlterSql != null" >
        test_alter_sql = #{record.testAlterSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testAlterRollbackSql != null" >
        test_alter_rollback_sql = #{record.testAlterRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testUpdateSql != null" >
        test_update_sql = #{record.testUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testUpdateRollbackSql != null" >
        test_update_rollback_sql = #{record.testUpdateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testInsertSql != null" >
        test_insert_sql = #{record.testInsertSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testInsertRollbackSql != null" >
        test_insert_rollback_sql = #{record.testInsertRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testDeleteSql != null" >
        test_delete_sql = #{record.testDeleteSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testDeleteRollbackSql != null" >
        test_delete_rollback_sql = #{record.testDeleteRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdCreateSql != null" >
        pd_create_sql = #{record.pdCreateSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdCreateRollbackSql != null" >
        pd_create_rollback_sql = #{record.pdCreateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdAlterSql != null" >
        pd_alter_sql = #{record.pdAlterSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdAlterRollbackSql != null" >
        pd_alter_rollback_sql = #{record.pdAlterRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdUpdateSql != null" >
        pd_update_sql = #{record.pdUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdUpdateRollbackSql != null" >
        pd_update_rollback_sql = #{record.pdUpdateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdInsertSql != null" >
        pd_insert_sql = #{record.pdInsertSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdInsertRollbackSql != null" >
        pd_insert_rollback_sql = #{record.pdInsertRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdDeleteSql != null" >
        pd_delete_sql = #{record.pdDeleteSql,jdbcType=VARCHAR},
      </if>
      <if test="record.pdDeleteRollbackSql != null" >
        pd_delete_rollback_sql = #{record.pdDeleteRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="record.createdUser != null" >
        created_user = #{record.createdUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedUser != null" >
        modified_user = #{record.modifiedUser,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ext1 != null" >
        ext1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
      <if test="record.ext2 != null" >
        ext2 = #{record.ext2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    update measurement_data
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      online_date = #{record.onlineDate,jdbcType=TIMESTAMP},
      test_create_sql = #{record.testCreateSql,jdbcType=VARCHAR},
      test_create_rollback_sql = #{record.testCreateRollbackSql,jdbcType=VARCHAR},
      test_alter_sql = #{record.testAlterSql,jdbcType=VARCHAR},
      test_alter_rollback_sql = #{record.testAlterRollbackSql,jdbcType=VARCHAR},
      test_update_sql = #{record.testUpdateSql,jdbcType=VARCHAR},
      test_update_rollback_sql = #{record.testUpdateRollbackSql,jdbcType=VARCHAR},
      test_insert_sql = #{record.testInsertSql,jdbcType=VARCHAR},
      test_insert_rollback_sql = #{record.testInsertRollbackSql,jdbcType=VARCHAR},
      test_delete_sql = #{record.testDeleteSql,jdbcType=VARCHAR},
      test_delete_rollback_sql = #{record.testDeleteRollbackSql,jdbcType=VARCHAR},
      pd_create_sql = #{record.pdCreateSql,jdbcType=VARCHAR},
      pd_create_rollback_sql = #{record.pdCreateRollbackSql,jdbcType=VARCHAR},
      pd_alter_sql = #{record.pdAlterSql,jdbcType=VARCHAR},
      pd_alter_rollback_sql = #{record.pdAlterRollbackSql,jdbcType=VARCHAR},
      pd_update_sql = #{record.pdUpdateSql,jdbcType=VARCHAR},
      pd_update_rollback_sql = #{record.pdUpdateRollbackSql,jdbcType=VARCHAR},
      pd_insert_sql = #{record.pdInsertSql,jdbcType=VARCHAR},
      pd_insert_rollback_sql = #{record.pdInsertRollbackSql,jdbcType=VARCHAR},
      pd_delete_sql = #{record.pdDeleteSql,jdbcType=VARCHAR},
      pd_delete_rollback_sql = #{record.pdDeleteRollbackSql,jdbcType=VARCHAR},
      created_user = #{record.createdUser,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_user = #{record.modifiedUser,jdbcType=VARCHAR},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      ext1 = #{record.ext1,jdbcType=VARCHAR},
      ext2 = #{record.ext2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="club.ak.work.bean.MeasurementData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    update measurement_data
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="onlineDate != null" >
        online_date = #{onlineDate,jdbcType=TIMESTAMP},
      </if>
      <if test="testCreateSql != null" >
        test_create_sql = #{testCreateSql,jdbcType=VARCHAR},
      </if>
      <if test="testCreateRollbackSql != null" >
        test_create_rollback_sql = #{testCreateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testAlterSql != null" >
        test_alter_sql = #{testAlterSql,jdbcType=VARCHAR},
      </if>
      <if test="testAlterRollbackSql != null" >
        test_alter_rollback_sql = #{testAlterRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testUpdateSql != null" >
        test_update_sql = #{testUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="testUpdateRollbackSql != null" >
        test_update_rollback_sql = #{testUpdateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testInsertSql != null" >
        test_insert_sql = #{testInsertSql,jdbcType=VARCHAR},
      </if>
      <if test="testInsertRollbackSql != null" >
        test_insert_rollback_sql = #{testInsertRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="testDeleteSql != null" >
        test_delete_sql = #{testDeleteSql,jdbcType=VARCHAR},
      </if>
      <if test="testDeleteRollbackSql != null" >
        test_delete_rollback_sql = #{testDeleteRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdCreateSql != null" >
        pd_create_sql = #{pdCreateSql,jdbcType=VARCHAR},
      </if>
      <if test="pdCreateRollbackSql != null" >
        pd_create_rollback_sql = #{pdCreateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdAlterSql != null" >
        pd_alter_sql = #{pdAlterSql,jdbcType=VARCHAR},
      </if>
      <if test="pdAlterRollbackSql != null" >
        pd_alter_rollback_sql = #{pdAlterRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdUpdateSql != null" >
        pd_update_sql = #{pdUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="pdUpdateRollbackSql != null" >
        pd_update_rollback_sql = #{pdUpdateRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdInsertSql != null" >
        pd_insert_sql = #{pdInsertSql,jdbcType=VARCHAR},
      </if>
      <if test="pdInsertRollbackSql != null" >
        pd_insert_rollback_sql = #{pdInsertRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="pdDeleteSql != null" >
        pd_delete_sql = #{pdDeleteSql,jdbcType=VARCHAR},
      </if>
      <if test="pdDeleteRollbackSql != null" >
        pd_delete_rollback_sql = #{pdDeleteRollbackSql,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null" >
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null" >
        modified_user = #{modifiedUser,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateData" parameterType="club.ak.work.bean.MeasurementData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jul 21 12:00:33 CST 2018.
    -->
    update measurement_data
    set user_id = #{userId,jdbcType=INTEGER},
      online_date = #{onlineDate,jdbcType=TIMESTAMP},
      test_create_sql = #{testCreateSql,jdbcType=VARCHAR},
      test_create_rollback_sql = #{testCreateRollbackSql,jdbcType=VARCHAR},
      test_alter_sql = #{testAlterSql,jdbcType=VARCHAR},
      test_alter_rollback_sql = #{testAlterRollbackSql,jdbcType=VARCHAR},
      test_update_sql = #{testUpdateSql,jdbcType=VARCHAR},
      test_update_rollback_sql = #{testUpdateRollbackSql,jdbcType=VARCHAR},
      test_insert_sql = #{testInsertSql,jdbcType=VARCHAR},
      test_insert_rollback_sql = #{testInsertRollbackSql,jdbcType=VARCHAR},
      test_delete_sql = #{testDeleteSql,jdbcType=VARCHAR},
      test_delete_rollback_sql = #{testDeleteRollbackSql,jdbcType=VARCHAR},
      pd_create_sql = #{pdCreateSql,jdbcType=VARCHAR},
      pd_create_rollback_sql = #{pdCreateRollbackSql,jdbcType=VARCHAR},
      pd_alter_sql = #{pdAlterSql,jdbcType=VARCHAR},
      pd_alter_rollback_sql = #{pdAlterRollbackSql,jdbcType=VARCHAR},
      pd_update_sql = #{pdUpdateSql,jdbcType=VARCHAR},
      pd_update_rollback_sql = #{pdUpdateRollbackSql,jdbcType=VARCHAR},
      pd_insert_sql = #{pdInsertSql,jdbcType=VARCHAR},
      pd_insert_rollback_sql = #{pdInsertRollbackSql,jdbcType=VARCHAR},
      pd_delete_sql = #{pdDeleteSql,jdbcType=VARCHAR},
      pd_delete_rollback_sql = #{pdDeleteRollbackSql,jdbcType=VARCHAR},
      created_user = #{createdUser,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_user = #{modifiedUser,jdbcType=VARCHAR},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id = "selectByDate" resultMap="BaseResultMap"  parameterType="club.ak.work.bean.MeasurementData">
  	select
  	<include refid="Base_Column_List" />
    from measurement_data
    where online_date = #{onlineDate,jdbcType=TIMESTAMP} and user_id = #{userId,jdbcType=INTEGER}
  </select>
  
</mapper>